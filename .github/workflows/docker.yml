on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  check-and-build-go-builder:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Check if go-builder image exists
        id: check_image
        run: |
          if docker pull ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/go-builder:${{ env.VERSION }}; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Build and push go-builder image if not exists
        if: env.exists == 'false'
        run: |
          docker build -f builder.Dockerfile -t ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/go-builder:latest -t ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/go-builder:${{ env.VERSION }} .
          docker push ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/go-builder:latest
          docker push ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/go-builder:${{ env.VERSION }}

  build-and-push-pgrok:
    runs-on: self-hosted
    needs: check-and-build-go-builder

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Pull go-builder image
        run: |
          docker pull ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/go-builder:${{ env.VERSION }}

      - name: Run Docker container and execute build.sh
        run: |
          docker run --rm -it -v $(pwd):/workspace ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/go-builder:${{ env.VERSION }} /bin/bash -c "cd /workspace && ./build.sh"

      - name: Build Docker image from prod.Dockerfile
        run: |
          docker build -f prod.Dockerfile -t ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/pgrok:latest -t ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/pgrok:${{ env.VERSION }} .

      - name: Push Docker image to custom registry
        run: |
          docker push ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/pgrok:latest
          docker push ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/pgrok:${{ env.VERSION }}
