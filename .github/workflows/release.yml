on:
  release:
    types: [published]

name: Release

jobs:
  release:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - uses: actions/setup-java@v4.0.0
        with:
          java-version: 17
          distribution: 'adopt'

      - uses: android-actions/setup-android@v3.2.0

      - uses: nttld/setup-ndk@v1.4.2
        id: setup-ndk
        with:
          ndk-version: r25c

      - uses: docker/setup-buildx-action@v1

      - uses: actions/setup-go@v4.1.0
        with:
          go-version: 1.21

      - name: Install Deps
        run: |
          sudo apt install -y make zip go-bindata
          go get -u golang.org/x/lint/golint
          go get -u github.com/jteeuwen/go-bindata/go-bindata
          git checkout -f
          bash build.sh

      - uses: actions/upload-artifact@v3.1.3
        with:
          path: dist/archive/* # A file, directory or wildcard pattern that describes what to upload
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_TOOLCHAIN: ${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/archive/*.tar.gz
          asset_name: pgrok*.tar.gz
          asset_content_type: application/gzip
      - name: Build Docker image
        run: |
          docker build -f prod.Dockerfile -t ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/pgrok:latest -t ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/pgrok:${{ env.VERSION }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/pgrok:latest
          docker push ${{ secrets.REGISTRY_URL}}/${{ secrets.REGISTRY_USERNAME }}/pgrok:${{ env.VERSION }}
